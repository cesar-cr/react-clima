{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","resultado","name","main","kelvin","className","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Header","titulo","href","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1676a129.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Clima = ({ resultado }) => {\n    // extraer los valores\n    const { name, main } = resultado;\n    if (!name) return null; \n\n    // Grados kelvin\n    const kelvin = 273.15;\n    return (\n        <div className=\"card-panel white col s12\">\n            <div className=\"black-text\">\n                <h2>El clima de {name} es:</h2>\n                <p className=\"temperatura\">\n                    {parseFloat(main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n                </p>\n                <p>Temperatura Máxima\n                    {parseFloat(main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n                </p>\n                <p>Temperatura Minima\n                    {parseFloat(main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nClima.propTypes = {\n    resultado : PropTypes.object.isRequired\n}\n\nexport default Clima\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Error = ({mensaje}) => {\n    return (\n        <p className=\"red bg-darken-4 error\">{mensaje}</p>\n    )\n}\n\nError.propTypes = {\n    mensaje : PropTypes.string.isRequired\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\n\n    const [error, guardarError] = useState(false);\n\n    // obtener ciudad y pais\n    const { ciudad, pais } = busqueda;\n\n    // func que coloca los elementos en el state\n    const handleChange = (e) => {\n        // actualizar el state \n        guardarBusqueda({\n            ...busqueda,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // validar\n        if (ciudad.trim() === '' || pais.trim() === '') {\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n        // pasar al componente principal\n        guardarConsultar(true);\n    }\n\n    return (\n        <form\n            onSubmit={ handleSubmit }\n        >\n            {error && <div className=\"red bg-darken-4 error\">Todos los campos son obligatorios</div>}\n            <div className=\"input-field col s12\">\n                <input\n                    type=\"text\"\n                    name=\"ciudad\"\n                    id=\"ciudad\"\n                    value={ciudad}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"ciudad\">Ciudad: </label>\n            </div>\n            <div className=\"input-field col s12\">\n                <select\n                    name=\"pais\"\n                    id=\"pais\"\n                    value={pais}\n                    onChange={handleChange}\n                >\n                    <option value=\"\">-- Seleccione un país --</option>\n                    <option value=\"US\">Estados Unidos</option>\n                    <option value=\"MX\">México</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"ES\">España</option>\n                    <option value=\"PE\">Perú</option>\n                </select>\n                <label htmlFor=\"pais\">País: </label>\n            </div>\n            <div className=\"input-field col s12\">\n                <button\n                    type=\"submit\"\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\">\n                    Buscar clima\n                </button>\n            </div>\n        </form>\n    )\n}\n\nFormulario.propTypes = {\n    busqueda: PropTypes.object.isRequired,\n    guardarBusqueda: PropTypes.func.isRequired,\n    guardarConsultar: PropTypes.func.isRequired\n}\n\nexport default Formulario\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = ({titulo}) => {\n    return (\n        <nav>\n            <div className=\"nav-wrapper light-blue darken-2\">\n                <a href=\"!#\" className=\"brand-logo\">{titulo}</a>\n            </div>\n        </nav>\n    )\n}\n\nHeader.propTypes = {\n    titulo : PropTypes.string.isRequired\n}\n\nexport default Header\n","import React, {useState, useEffect} from 'react';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\n\nfunction App() {\n  // state del formulario\n  const [busqueda, guardarBusqueda] = useState({\n      ciudad: '',\n      pais:''\n  });\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      if (consultar) {\n        const appId = '7a51988d84124648c3a9b13a2a323e33';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        guardarResultado(resultado);\n        guardarConsultar(false);\n        \n\n        // Busqueda de resultados de error en la consulta\n        if (resultado.cod == 404) {\n          guardarError(true)\n        } else {\n          guardarError(false);\n        }\n      }\n    }\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n  if (error) {\n    componente = <Error mensaje=\"No hay resultados\"/>\n  } else {\n    componente = <Clima resultado={ resultado }/>\n  }\n\n  return (\n    <>\n      <Header titulo=\"Clima React App\" />\n      <div className=\"contenedor-form\">\n        <div className=\"row\">\n          <div className=\"col m6 s12\">\n            <Formulario\n              busqueda={busqueda}\n              guardarBusqueda={guardarBusqueda}\n              guardarConsultar={guardarConsultar}\n            />\n          </div>\n          <div className=\"col m6 s12\">\n            {componente}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}